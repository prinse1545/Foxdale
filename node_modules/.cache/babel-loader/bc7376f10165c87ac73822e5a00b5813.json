{"ast":null,"code":"import Firebase from '../config/Firebase';\nexport const UPDATE_BLOGS = \"UPDATE_BLOGS\";\nexport const TOGGLE_BLOG_LOADING = \"TOGGLE_BLOG_LOADING\";\nexport const loadBlogs = () => {\n  return dispatch => {\n    Firebase.firestore().collection('blogPosts').get().then(snap => {\n      var arr = [];\n      snap.docs.map(doc => {\n        const obj = Object.assign({\n          _id: doc.id\n        }, doc.data());\n        arr.push(obj);\n      });\n      dispatch(updateBlogs(arr));\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n};\nexport const toggleBlog = () => {\n  return dispatch => {\n    dispatch(toggleBlogLoading());\n  };\n};\nexport const addBlogPost = blogPost => {\n  return (dispatch, getState) => {\n    const date = new Date();\n    Firebase.firestore().collection('blogPosts').add({\n      text: blogPost,\n      date: date\n    }).then(doc => {\n      console.log('documnet successfully written');\n      const newBlog = {\n        _id: doc.id,\n        text: blogPost,\n        date: date\n      };\n      var blogPosts = getState().blogs.blogPosts;\n      blogPosts.push(newBlog);\n      dispatch(updateBlogs(blogPosts));\n    }).catch(err => {\n      console.log(\"There was an error: \", err);\n    });\n  };\n};\nexport const deleteBlogPost = blogId => {\n  return (dispatch, getState) => {\n    Firebase.firestore().collection('blogPosts').doc(blogId).delete().then(() => {\n      console.log('Documnet Sucessfully Deleted');\n      const blogPosts = getState().blogs.blogPosts;\n      var newBlogs = [];\n      blogPosts.map(b => {\n        if (b._id != blogId) {\n          newBlogs.push(b);\n        }\n      });\n      dispatch(updateBlogs(newBlogs));\n    }).catch(err => {\n      console.log(\"There was an error\", err);\n    });\n  };\n};\n\nconst updateBlogs = blogPosts => ({\n  type: UPDATE_BLOGS,\n  blogPosts\n});\n\nconst toggleBlogLoading = () => ({\n  type: TOGGLE_BLOG_LOADING\n});","map":{"version":3,"sources":["/Users/philippmourasrivastava/Dev/Foxdale/src/app/actions/blogs.js"],"names":["Firebase","UPDATE_BLOGS","TOGGLE_BLOG_LOADING","loadBlogs","dispatch","firestore","collection","get","then","snap","arr","docs","map","doc","obj","Object","assign","_id","id","data","push","updateBlogs","catch","err","console","log","toggleBlog","toggleBlogLoading","addBlogPost","blogPost","getState","date","Date","add","text","newBlog","blogPosts","blogs","deleteBlogPost","blogId","delete","newBlogs","b","type"],"mappings":"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","sourcesContent":["import Firebase from '../config/Firebase';\n\nexport const UPDATE_BLOGS = \"UPDATE_BLOGS\";\nexport const TOGGLE_BLOG_LOADING = \"TOGGLE_BLOG_LOADING\";\n\nexport const loadBlogs = () => {\n\n  return (dispatch) => {\n\n    Firebase.firestore().collection('blogPosts').get().then((snap) => {\n\n      var arr = []\n\n      snap.docs.map((doc) => {\n        const obj = Object.assign({_id: doc.id}, doc.data())\n\n        arr.push(obj)\n      })\n\n      dispatch(updateBlogs(arr))\n    }).catch((err) => {\n      console.log(err)\n    })\n\n\n  }\n}\n\nexport const toggleBlog = () => {\n\n  return (dispatch) => {\n    dispatch(toggleBlogLoading())\n  }\n}\n\nexport const addBlogPost = blogPost => {\n\n  return (dispatch, getState) => {\n\n    const date = new Date()\n\n    Firebase.firestore().collection('blogPosts').add({\n      text: blogPost,\n      date: date\n    }).then((doc) => {\n      console.log('documnet successfully written');\n\n      const newBlog = {\n        _id: doc.id,\n        text: blogPost,\n        date: date\n      }\n      var blogPosts = getState().blogs.blogPosts\n\n      blogPosts.push(newBlog)\n\n      dispatch(updateBlogs(blogPosts))\n\n    }).catch((err) => {\n      console.log(\"There was an error: \", err);\n    })\n\n  }\n}\n\nexport const deleteBlogPost = blogId => {\n\n  return (dispatch, getState) => {\n\n    Firebase.firestore().collection('blogPosts').doc(blogId).delete().then(() => {\n      console.log('Documnet Sucessfully Deleted');\n      const blogPosts = getState().blogs.blogPosts;\n\n      var newBlogs = []\n\n      blogPosts.map((b) => {\n        if(b._id != blogId) {\n          newBlogs.push(b)\n        }\n      })\n\n      dispatch(updateBlogs(newBlogs))\n    }).catch((err) => {\n      console.log(\"There was an error\", err)\n    })\n\n  }\n}\n\nconst updateBlogs = blogPosts => ({\n  type: UPDATE_BLOGS,\n  blogPosts\n})\n\nconst toggleBlogLoading = () => ({\n  type: TOGGLE_BLOG_LOADING\n})\n"]},"metadata":{},"sourceType":"module"}