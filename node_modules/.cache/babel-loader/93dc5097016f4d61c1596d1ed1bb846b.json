{"ast":null,"code":"var _jsxFileName = \"/Users/philippmourasrivastava/Dev/Foxdale/src/app/screens/login/index.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Layout, Row, Col, Form, Icon, Input, Button, Checkbox } from 'antd';\nimport { loginWithFirebase } from '../../actions/auth';\nimport Firebase from '../../config/Firebase';\nconst styles = {\n  row: {\n    backgroundColor: '#ffae19',\n    paddingTop: '2%',\n    paddingBottom: '8%'\n  },\n  col: {\n    marginTop: '12%',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  input: {\n    width: '30%'\n  },\n  img: {\n    marginBottom: 20,\n    height: 120,\n    width: 120\n  }\n};\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = prop => event => {\n      this.setState({\n        [prop]: event.target.value\n      });\n    };\n\n    this.handleClose = (event, reason) => {\n      if (reason === 'clickaway') {\n        return;\n      }\n\n      this.setState({\n        open: false\n      });\n    };\n\n    this.hasErrors = fieldsError => {\n      return Object.keys(fieldsError).some(field => fieldsError[field]);\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFields((err, values) => {\n        if (!err) {\n          console.log('Received values of form: ', values);\n          const user = {\n            username: values.email,\n            password: values.password\n          };\n          this.props.loginWithFirebase(user);\n          this.props.history.push('/home'); // Firebase.auth().onAuthStateChanged(user => {\n          //     if (user) {\n          //       localStorage.setItem('authUser', JSON.stringify(user));\n          //       this.props.history.push('/home')\n          //     } else {\n          //       localStorage.removeItem('authUser');\n          //       console.log('An error has occurred')\n          //     }\n          // })\n        }\n      });\n    };\n\n    this.signUp = () => {\n      this.props.history.push('/signup');\n    };\n\n    this.state = {\n      username: '',\n      password: '',\n      open: false,\n      errorMessage: ''\n    };\n  }\n\n  render() {\n    const _this$props$form = this.props.form,\n          getFieldDecorator = _this$props$form.getFieldDecorator,\n          getFieldError = _this$props$form.getFieldError,\n          isFieldTouched = _this$props$form.isFieldTouched; // Only show error after a field is touched.\n\n    const userNameError = isFieldTouched('userName') && getFieldError('userName');\n    const passwordError = isFieldTouched('password') && getFieldError('password');\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(Row, {\n      type: \"flex\",\n      justify: \"center\",\n      align: \"center\",\n      style: styles.row,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(Col, {\n      span: 12,\n      align: \"center\",\n      style: styles.col,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"https://foxdale.s3.amazonaws.com/media/fox_head.png\",\n      style: styles.img,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, getFieldDecorator('email', {\n      rules: [{\n        required: true,\n        message: 'Please input your email'\n      }]\n    })(React.createElement(Input, {\n      prefix: React.createElement(Icon, {\n        type: \"user\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }),\n      placeholder: \"Email\",\n      style: styles.input,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, getFieldDecorator('password', {\n      rules: [{\n        required: true,\n        message: 'Please input your password'\n      }]\n    })(React.createElement(Input, {\n      prefix: React.createElement(Icon, {\n        type: \"lock\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }),\n      type: \"password\",\n      placeholder: \"Password\",\n      style: styles.input,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, getFieldDecorator('remember', {\n      valuePropName: 'checked',\n      initialValue: true\n    })(React.createElement(Checkbox, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"Remember me\")), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"Log in\")), React.createElement(\"div\", {\n      onClick: this.signUp,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"Create New User\"))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {};\n};\n\nconst mapDispatchToProps = dispatch => ({\n  loginWithFirebase: user => dispatch(loginWithFirebase(user))\n});\n\nconst ConnectedLogin = connect(mapStateToProps, mapDispatchToProps)(Login);\nexport default Form.create({\n  name: 'ConnectedLogin'\n})(ConnectedLogin);","map":{"version":3,"sources":["/Users/philippmourasrivastava/Dev/Foxdale/src/app/screens/login/index.js"],"names":["React","Component","connect","Layout","Row","Col","Form","Icon","Input","Button","Checkbox","loginWithFirebase","Firebase","styles","row","backgroundColor","paddingTop","paddingBottom","col","marginTop","justifyContent","alignItems","input","width","img","marginBottom","height","Login","constructor","props","handleChange","prop","event","setState","target","value","handleClose","reason","open","hasErrors","fieldsError","Object","keys","some","field","handleSubmit","e","preventDefault","form","validateFields","err","values","console","log","user","username","email","password","history","push","signUp","state","errorMessage","render","getFieldDecorator","getFieldError","isFieldTouched","userNameError","passwordError","rules","required","message","color","valuePropName","initialValue","mapStateToProps","mapDispatchToProps","dispatch","ConnectedLogin","create","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Layout, Row, Col, Form, Icon, Input, Button, Checkbox } from 'antd'\nimport { loginWithFirebase } from '../../actions/auth'\nimport Firebase from '../../config/Firebase'\n\nconst styles = {\n  row: {\n    backgroundColor: '#ffae19',\n    paddingTop: '2%',\n    paddingBottom: '8%'\n  },\n  col: {\n    marginTop: '12%',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  input: {\n    width: '30%'\n  },\n  img: {\n    marginBottom: 20,\n    height: 120,\n    width: 120\n  }\n}\n\n\nclass Login extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            username: '',\n            password: '',\n            open: false,\n            errorMessage: ''\n        }\n    }\n\n    handleChange = prop => event => {\n        this.setState({ [prop]: event.target.value })\n    }\n\n    handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return\n        }\n\n        this.setState({ open: false })\n    }\n\n\n    hasErrors = fieldsError => {\n        return Object.keys(fieldsError).some(field => fieldsError[field])\n    }\n\n    handleSubmit = e => {\n        e.preventDefault()\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                console.log('Received values of form: ', values)\n                const user = {\n                    username: values.email,\n                    password: values.password\n                }\n\n                this.props.loginWithFirebase(user)\n                this.props.history.push('/home')\n                // Firebase.auth().onAuthStateChanged(user => {\n                //     if (user) {\n                //       localStorage.setItem('authUser', JSON.stringify(user));\n                //       this.props.history.push('/home')\n                //     } else {\n                //       localStorage.removeItem('authUser');\n                //       console.log('An error has occurred')\n                //     }\n                // })\n\n            }\n        })\n    }\n\n    signUp = () => {\n      this.props.history.push('/signup')\n    }\n\n    render() {\n\n        const {\n            getFieldDecorator,\n            getFieldError,\n            isFieldTouched\n        } = this.props.form\n\n        // Only show error after a field is touched.\n        const userNameError =\n            isFieldTouched('userName') && getFieldError('userName')\n        const passwordError =\n            isFieldTouched('password') && getFieldError('password')\n\n\n        return (\n            <div>\n              <Row type=\"flex\" justify=\"center\" align=\"center\" style={styles.row}>\n                  <Col span={12} align=\"center\" style={styles.col}>\n                      <img src='https://foxdale.s3.amazonaws.com/media/fox_head.png' style={styles.img} />\n                      <Form onSubmit={this.handleSubmit}>\n                          <Form.Item>\n                              {getFieldDecorator('email', {\n                                  rules: [\n                                      {\n                                          required: true,\n                                          message: 'Please input your email'\n                                      }\n                                  ]\n                              })(\n                                  <Input\n                                      prefix={\n                                          <Icon\n                                              type=\"user\"\n                                              style={{ color: 'rgba(0,0,0,.25)' }}\n                                          />\n                                      }\n                                      placeholder=\"Email\"\n                                      style={styles.input}\n                                  />\n                              )}\n                          </Form.Item>\n                          <Form.Item>\n                              {getFieldDecorator('password', {\n                                  rules: [\n                                      {\n                                          required: true,\n                                          message: 'Please input your password'\n                                      }\n                                  ]\n                              })(\n                                  <Input\n                                      prefix={\n                                          <Icon\n                                              type=\"lock\"\n                                              style={{ color: 'rgba(0,0,0,.25)' }}\n                                          />\n                                      }\n                                      type=\"password\"\n                                      placeholder=\"Password\"\n                                      style={styles.input}\n                                  />\n                              )}\n                          </Form.Item>\n                          <Form.Item>\n                              {getFieldDecorator('remember', {\n                                  valuePropName: 'checked',\n                                  initialValue: true\n                              })(<Checkbox>Remember me</Checkbox>)}\n                              <Row>\n                                <Button type=\"primary\" htmlType=\"submit\">\n                                    Log in\n                                </Button>\n                              </Row>\n                              <div onClick={this.signUp}>Create New User</div>\n                          </Form.Item>\n                      </Form>\n                  </Col>\n              </Row>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {}\n}\n\nconst mapDispatchToProps = dispatch => ({\n    loginWithFirebase: user => dispatch(loginWithFirebase(user))\n})\n\nconst ConnectedLogin = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Login)\n\nexport default Form.create({ name: 'ConnectedLogin' })(ConnectedLogin)\n"]},"metadata":{},"sourceType":"module"}