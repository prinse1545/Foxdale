{"ast":null,"code":"import Firebase from '../config/Firebase';\nexport const UPDATE_TESTIMONIES = \"UPDATE_TESTIMONIES\";\nexport const TOGGLE_TESTIMONY_LOADING = \"TOGGLE_TESTIMONY_LOADING\";\nexport const getTestimonies = () => {\n  return dispatch => {\n    Firebase.firestore().collection('testimonies').limit(20).get().then(snap => {\n      var arr = [];\n      snap.docs.map(doc => {\n        console.log(doc.id);\n        arr.push(doc.data());\n      });\n      dispatch(updateTestimonies(arr));\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n};\nexport const toggleTestimony = () => {\n  return dispatch => {\n    dispatch(toggleTestimonyLoading());\n  };\n};\nexport const insertTestimony = testimony => {\n  return (dispatch, getState) => {\n    Firebase.firestore().collection('testimonies').set({}).then(() => {\n      console.log('documnet successfully written');\n    }).catch(err => {\n      console.log(\"There was an error: \", err);\n    });\n  };\n};\nexport const deleteTestimony = testId => {\n  return (dispatch, getState) => {\n    Firebase.firestore().collection('testimonies').doc(testId).delete().then(() => {\n      console.log('Documnet Sucessfully Deleted');\n      const testimonies = getState().testimonies.testimonies;\n      var newTest = [];\n      testimonies.map(t => {\n        if (t._id != testId) {\n          newTest.push(t);\n        }\n      });\n      dispatch(updateTestimonies(newTest));\n    }).catch(err => {\n      console.log(\"There was an error\", err);\n    });\n  };\n};\n\nconst updateTestimonies = testimonies => ({\n  type: UPDATE_TESTIMONIES,\n  testimonies\n});\n\nconst toggleTestimonyLoading = () => ({\n  type: TOGGLE_TESTIMONY_LOADING\n});","map":{"version":3,"sources":["/Users/philippmourasrivastava/Dev/Foxdale/src/app/actions/testimonies.js"],"names":["Firebase","UPDATE_TESTIMONIES","TOGGLE_TESTIMONY_LOADING","getTestimonies","dispatch","firestore","collection","limit","get","then","snap","arr","docs","map","doc","console","log","id","push","data","updateTestimonies","catch","err","toggleTestimony","toggleTestimonyLoading","insertTestimony","testimony","getState","set","deleteTestimony","testId","delete","testimonies","newTest","t","_id","type"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oBAArB;AAEA,OAAO,MAAMC,kBAAkB,GAAG,oBAA3B;AACP,OAAO,MAAMC,wBAAwB,GAAG,0BAAjC;AAEP,OAAO,MAAMC,cAAc,GAAG,MAAM;AAGlC,SAAQC,QAAD,IAAc;AAEnBJ,IAAAA,QAAQ,CAACK,SAAT,GAAqBC,UAArB,CAAgC,aAAhC,EAA+CC,KAA/C,CAAqD,EAArD,EAAyDC,GAAzD,GAA+DC,IAA/D,CAAqEC,IAAD,IAAU;AAC5E,UAAIC,GAAG,GAAG,EAAV;AAEAD,MAAAA,IAAI,CAACE,IAAL,CAAUC,GAAV,CAAeC,GAAD,IAAS;AAErBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,EAAhB;AAEAN,QAAAA,GAAG,CAACO,IAAJ,CAASJ,GAAG,CAACK,IAAJ,EAAT;AACD,OALD;AAMAf,MAAAA,QAAQ,CAACgB,iBAAiB,CAACT,GAAD,CAAlB,CAAR;AACD,KAVD,EAUGU,KAVH,CAUUC,GAAD,IAAS;AAChBP,MAAAA,OAAO,CAACC,GAAR,CAAYM,GAAZ;AACD,KAZD;AAcD,GAhBD;AAkBD,CArBM;AAuBP,OAAO,MAAMC,eAAe,GAAG,MAAM;AAEnC,SAAQnB,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACoB,sBAAsB,EAAvB,CAAR;AACD,GAFD;AAGD,CALM;AAOP,OAAO,MAAMC,eAAe,GAAGC,SAAS,IAAI;AAE1C,SAAO,CAACtB,QAAD,EAAWuB,QAAX,KAAwB;AAE7B3B,IAAAA,QAAQ,CAACK,SAAT,GAAqBC,UAArB,CAAgC,aAAhC,EAA+CsB,GAA/C,CAAmD,EAAnD,EAEGnB,IAFH,CAEQ,MAAM;AACZM,MAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACD,KAJD,EAIGK,KAJH,CAIUC,GAAD,IAAS;AAChBP,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCM,GAApC;AACD,KAND;AAQD,GAVD;AAWD,CAbM;AAeP,OAAO,MAAMO,eAAe,GAAGC,MAAM,IAAI;AAEvC,SAAO,CAAC1B,QAAD,EAAWuB,QAAX,KAAwB;AAE7B3B,IAAAA,QAAQ,CAACK,SAAT,GAAqBC,UAArB,CAAgC,aAAhC,EAA+CQ,GAA/C,CAAmDgB,MAAnD,EAA2DC,MAA3D,GAAoEtB,IAApE,CAAyE,MAAM;AAC7EM,MAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACA,YAAMgB,WAAW,GAAGL,QAAQ,GAAGK,WAAX,CAAuBA,WAA3C;AAEA,UAAIC,OAAO,GAAG,EAAd;AAEAD,MAAAA,WAAW,CAACnB,GAAZ,CAAiBqB,CAAD,IAAO;AACrB,YAAGA,CAAC,CAACC,GAAF,IAASL,MAAZ,EAAoB;AAClBG,UAAAA,OAAO,CAACf,IAAR,CAAagB,CAAb;AACD;AACF,OAJD;AAMA9B,MAAAA,QAAQ,CAACgB,iBAAiB,CAACa,OAAD,CAAlB,CAAR;AACD,KAbD,EAaGZ,KAbH,CAaUC,GAAD,IAAS;AAChBP,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCM,GAAlC;AACD,KAfD;AAkBD,GApBD;AAqBD,CAvBM;;AA0BP,MAAMF,iBAAiB,GAAGY,WAAW,KAAK;AACxCI,EAAAA,IAAI,EAAEnC,kBADkC;AAExC+B,EAAAA;AAFwC,CAAL,CAArC;;AAKA,MAAMR,sBAAsB,GAAG,OAAO;AACpCY,EAAAA,IAAI,EAAElC;AAD8B,CAAP,CAA/B","sourcesContent":["import Firebase from '../config/Firebase'\n\nexport const UPDATE_TESTIMONIES = \"UPDATE_TESTIMONIES\";\nexport const TOGGLE_TESTIMONY_LOADING = \"TOGGLE_TESTIMONY_LOADING\";\n\nexport const getTestimonies = () => {\n\n\n  return (dispatch) => {\n\n    Firebase.firestore().collection('testimonies').limit(20).get().then((snap) => {\n      var arr = []\n\n      snap.docs.map((doc) => {\n\n        console.log(doc.id)\n\n        arr.push(doc.data())\n      })\n      dispatch(updateTestimonies(arr))\n    }).catch((err) => {\n      console.log(err)\n    })\n\n  }\n\n}\n\nexport const toggleTestimony = () => {\n\n  return (dispatch) => {\n    dispatch(toggleTestimonyLoading())\n  }\n}\n\nexport const insertTestimony = testimony => {\n\n  return (dispatch, getState) => {\n\n    Firebase.firestore().collection('testimonies').set({\n\n    }).then(() => {\n      console.log('documnet successfully written');\n    }).catch((err) => {\n      console.log(\"There was an error: \", err);\n    })\n\n  }\n}\n\nexport const deleteTestimony = testId => {\n\n  return (dispatch, getState) => {\n\n    Firebase.firestore().collection('testimonies').doc(testId).delete().then(() => {\n      console.log('Documnet Sucessfully Deleted');\n      const testimonies = getState().testimonies.testimonies;\n\n      var newTest = []\n\n      testimonies.map((t) => {\n        if(t._id != testId) {\n          newTest.push(t)\n        }\n      })\n\n      dispatch(updateTestimonies(newTest))\n    }).catch((err) => {\n      console.log(\"There was an error\", err)\n    })\n\n\n  }\n}\n\n\nconst updateTestimonies = testimonies => ({\n  type: UPDATE_TESTIMONIES,\n  testimonies\n})\n\nconst toggleTestimonyLoading = () => ({\n  type: TOGGLE_TESTIMONY_LOADING\n})\n"]},"metadata":{},"sourceType":"module"}