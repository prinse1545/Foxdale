{"ast":null,"code":"var _jsxFileName = \"/Users/philippmourasrivastava/Dev/Foxdale/src/app/screens/login/index.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Layout, Row, Col, Form, Icon, Input, Button, Checkbox, Modal, Alert, message } from 'antd';\nimport { loginWithFirebase, isUserLoggedIn, createAccountWithFirebase } from '../../actions/auth';\nimport Firebase from '../../config/Firebase';\nimport SignUpForm from '../../components/signUpForm';\nconst styles = {\n  row: {\n    backgroundColor: '#ffae19',\n    paddingTop: '2%',\n    paddingBottom: '8%'\n  },\n  col: {\n    marginTop: '12%',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  input: {\n    width: '30%'\n  },\n  modalInput: {\n    width: '60%'\n  },\n  img: {\n    marginBottom: 20,\n    height: 120,\n    width: 120\n  },\n  text: {\n    fontFamily: 'Avenir',\n    color: '#fff'\n  }\n};\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = prop => event => {\n      this.setState({\n        [prop]: event.target.value\n      });\n    };\n\n    this.handleClose = (event, reason) => {\n      if (reason === 'clickaway') {\n        return;\n      }\n\n      this.setState({\n        open: false\n      });\n    };\n\n    this.hasErrors = fieldsError => {\n      return Object.keys(fieldsError).some(field => fieldsError[field]);\n    };\n\n    this.handleSubmit = e => {\n      const _this$props = this.props,\n            loggedIn = _this$props.loggedIn,\n            history = _this$props.history;\n      e.preventDefault();\n      this.props.form.validateFields((err, values) => {\n        if (!err) {\n          console.log('Received values of form: ', values);\n          const user = {\n            username: values.email,\n            password: values.password\n          };\n          this.props.loginWithFirebase(user).then(user => {\n            history.push('/home');\n          }).catch(err => {\n            message.error(err.message);\n          });\n          this.props.form.resetFields();\n        }\n      });\n    };\n\n    this.handleAccountCreation = info => {\n      const _this$props2 = this.props,\n            createAccountWithFirebase = _this$props2.createAccountWithFirebase,\n            history = _this$props2.history;\n      createAccountWithFirebase(info).then(user => {\n        this.setState({\n          visible: false\n        });\n        history.push('/home');\n      });\n    };\n\n    this.signUp = () => {\n      this.setState({\n        visible: true\n      });\n    };\n\n    this.handleOk = e => {\n      console.log(e);\n      this.setState({\n        visible: false\n      });\n    };\n\n    this.handleCancel = e => {\n      console.log(e);\n      this.setState({\n        visible: false\n      });\n    };\n\n    this.state = {\n      username: '',\n      password: '',\n      open: false,\n      errorMessage: '',\n      visible: false\n    };\n    this.props.isUserLoggedIn();\n  }\n\n  render() {\n    const _this$props$form = this.props.form,\n          getFieldDecorator = _this$props$form.getFieldDecorator,\n          getFieldError = _this$props$form.getFieldError,\n          isFieldTouched = _this$props$form.isFieldTouched; // Only show error after a field is touched.\n\n    const userNameError = isFieldTouched('userName') && getFieldError('userName');\n    const passwordError = isFieldTouched('password') && getFieldError('password');\n    const visible = this.state.visible;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(Row, {\n      type: \"flex\",\n      justify: \"center\",\n      align: \"middle\",\n      style: styles.row,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(Col, {\n      span: 12,\n      align: \"center\",\n      style: styles.col,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"https://foxdale.s3.amazonaws.com/media/fox_head.png\",\n      style: styles.img,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }), React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, getFieldDecorator('email', {\n      rules: [{\n        required: true,\n        message: 'Please input your email'\n      }]\n    })(React.createElement(Input, {\n      prefix: React.createElement(Icon, {\n        type: \"user\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }),\n      placeholder: \"Email\",\n      style: styles.input,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, getFieldDecorator('password', {\n      rules: [{\n        required: true,\n        message: 'Please input your password'\n      }]\n    })(React.createElement(Input, {\n      prefix: React.createElement(Icon, {\n        type: \"lock\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }),\n      type: \"password\",\n      placeholder: \"Password\",\n      style: styles.input,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, getFieldDecorator('remember', {\n      valuePropName: 'checked',\n      initialValue: true\n    })(React.createElement(Checkbox, {\n      style: styles.text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, \"Remember me\")), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, \"Log in\")), React.createElement(\"div\", {\n      onClick: this.signUp,\n      style: styles.text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, \"Create New User\"))))), React.createElement(Modal, {\n      title: \"Create New Account\",\n      visible: visible,\n      align: \"center\",\n      onCancel: this.handleCancel,\n      footer: [],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(SignUpForm, {\n      onSubmit: this.handleAccountCreation,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    loggedIn: state.auth.loggedIn\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  loginWithFirebase: user => dispatch(loginWithFirebase(user)),\n  isUserLoggedIn: () => dispatch(isUserLoggedIn()),\n  createAccountWithFirebase: accountInfo => dispatch(createAccountWithFirebase(accountInfo))\n});\n\nconst ConnectedLogin = connect(mapStateToProps, mapDispatchToProps)(Login);\nexport default Form.create({\n  name: 'ConnectedLogin'\n})(ConnectedLogin);","map":{"version":3,"sources":["/Users/philippmourasrivastava/Dev/Foxdale/src/app/screens/login/index.js"],"names":["React","Component","connect","Layout","Row","Col","Form","Icon","Input","Button","Checkbox","Modal","Alert","message","loginWithFirebase","isUserLoggedIn","createAccountWithFirebase","Firebase","SignUpForm","styles","row","backgroundColor","paddingTop","paddingBottom","col","marginTop","justifyContent","alignItems","input","width","modalInput","img","marginBottom","height","text","fontFamily","color","Login","constructor","props","handleChange","prop","event","setState","target","value","handleClose","reason","open","hasErrors","fieldsError","Object","keys","some","field","handleSubmit","e","loggedIn","history","preventDefault","form","validateFields","err","values","console","log","user","username","email","password","then","push","catch","error","resetFields","handleAccountCreation","info","visible","signUp","handleOk","handleCancel","state","errorMessage","render","getFieldDecorator","getFieldError","isFieldTouched","userNameError","passwordError","rules","required","valuePropName","initialValue","mapStateToProps","auth","mapDispatchToProps","dispatch","accountInfo","ConnectedLogin","create","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Layout, Row, Col, Form, Icon, Input, Button, Checkbox, Modal, Alert, message } from 'antd'\nimport { loginWithFirebase, isUserLoggedIn, createAccountWithFirebase } from '../../actions/auth'\nimport Firebase from '../../config/Firebase'\nimport SignUpForm from '../../components/signUpForm'\n\nconst styles = {\n  row: {\n    backgroundColor: '#ffae19',\n    paddingTop: '2%',\n    paddingBottom: '8%'\n  },\n  col: {\n    marginTop: '12%',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  input: {\n    width: '30%'\n  },\n  modalInput: {\n    width: '60%'\n  },\n  img: {\n    marginBottom: 20,\n    height: 120,\n    width: 120\n  },\n  text: {\n    fontFamily: 'Avenir',\n    color: '#fff'\n  }\n}\n\n\n\n\n\nclass Login extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            username: '',\n            password: '',\n            open: false,\n            errorMessage: '',\n            visible: false\n        }\n\n      this.props.isUserLoggedIn()\n    }\n\n    handleChange = prop => event => {\n        this.setState({ [prop]: event.target.value })\n    }\n\n    handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return\n        }\n\n        this.setState({ open: false })\n    }\n\n\n    hasErrors = fieldsError => {\n        return Object.keys(fieldsError).some(field => fieldsError[field])\n    }\n\n    handleSubmit = e => {\n        const { loggedIn, history } = this.props;\n        e.preventDefault()\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                console.log('Received values of form: ', values)\n                const user = {\n                    username: values.email,\n                    password: values.password\n                }\n\n                this.props.loginWithFirebase(user).then((user) => {\n                  history.push('/home')\n                }).catch((err) => {\n                  message.error(err.message)\n                })\n\n                this.props.form.resetFields()\n\n            }\n        })\n    }\n\n    handleAccountCreation = info => {\n      const { createAccountWithFirebase, history } = this.props;\n\n      createAccountWithFirebase(info).then((user) => {\n        this.setState({visible: false})\n        history.push('/home')\n      })\n    }\n\n    signUp = () => {\n      this.setState({\n        visible: true,\n      });\n    }\n\n\n    handleOk = e => {\n      console.log(e);\n      this.setState({\n        visible: false,\n      });\n    };\n\n    handleCancel = e => {\n      console.log(e);\n      this.setState({\n        visible: false,\n      });\n    };\n\n    render() {\n\n        const {\n            getFieldDecorator,\n            getFieldError,\n            isFieldTouched\n        } = this.props.form\n\n        // Only show error after a field is touched.\n        const userNameError =\n            isFieldTouched('userName') && getFieldError('userName')\n        const passwordError =\n            isFieldTouched('password') && getFieldError('password')\n\n        const { visible } = this.state;\n\n        return (\n            <div>\n              <Row type=\"flex\" justify=\"center\" align=\"middle\" style={styles.row}>\n                  <Col span={12} align=\"center\" style={styles.col}>\n                      <img src='https://foxdale.s3.amazonaws.com/media/fox_head.png' style={styles.img} />\n                      <Form onSubmit={this.handleSubmit}>\n                          <Form.Item>\n                              {getFieldDecorator('email', {\n                                  rules: [\n                                      {\n                                          required: true,\n                                          message: 'Please input your email'\n                                      }\n                                  ]\n                              })(\n                                  <Input\n                                      prefix={\n                                          <Icon\n                                              type=\"user\"\n                                              style={{ color: 'rgba(0,0,0,.25)' }}\n                                          />\n                                      }\n                                      placeholder=\"Email\"\n                                      style={styles.input}\n                                  />\n                              )}\n                          </Form.Item>\n                          <Form.Item>\n                              {getFieldDecorator('password', {\n                                  rules: [\n                                      {\n                                          required: true,\n                                          message: 'Please input your password'\n                                      }\n                                  ]\n                              })(\n                                  <Input\n                                      prefix={\n                                          <Icon\n                                              type=\"lock\"\n                                              style={{ color: 'rgba(0,0,0,.25)' }}\n                                          />\n                                      }\n                                      type=\"password\"\n                                      placeholder=\"Password\"\n                                      style={styles.input}\n                                  />\n                              )}\n                          </Form.Item>\n                          <Form.Item>\n                              {getFieldDecorator('remember', {\n                                  valuePropName: 'checked',\n                                  initialValue: true\n                              })(<Checkbox style={styles.text}>Remember me</Checkbox>)}\n                              <Row>\n                                <Button type=\"primary\" htmlType=\"submit\">\n                                    Log in\n                                </Button>\n                              </Row>\n                              <div onClick={this.signUp} style={styles.text}>Create New User</div>\n                          </Form.Item>\n                      </Form>\n                  </Col>\n              </Row>\n              <Modal\n                title=\"Create New Account\"\n                visible={visible}\n                align=\"center\"\n                onCancel={this.handleCancel}\n                footer={[]}\n              >\n                <SignUpForm onSubmit={this.handleAccountCreation}/>\n              </Modal>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n      loggedIn: state.auth.loggedIn\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    loginWithFirebase: user => dispatch(loginWithFirebase(user)),\n    isUserLoggedIn: () => dispatch(isUserLoggedIn()),\n    createAccountWithFirebase: (accountInfo) => dispatch(createAccountWithFirebase(accountInfo))\n})\n\nconst ConnectedLogin = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Login)\n\nexport default Form.create({ name: 'ConnectedLogin' })(ConnectedLogin)\n"]},"metadata":{},"sourceType":"module"}