{"ast":null,"code":"import _objectWithoutProperties from \"/Users/philippmourasrivastava/Dev/Foxdale/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/philippmourasrivastava/Dev/Foxdale/src/app/containers/privateRouteContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { onAuthenticated, onUnAuthenticated } from '../actions/user';\nimport { Redirect, Route } from 'react-router-dom';\nimport Firebase from '../config/Firebase';\n\nclass PrivateRouteContainer extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const _this$props = this.props,\n          Component = _this$props.component,\n          authenticated = _this$props.authenticated,\n          rest = _objectWithoutProperties(_this$props, [\"component\", \"authenticated\"]);\n\n    return React.createElement(Route, Object.assign({}, rest, {\n      render: props => authenticated === true ? React.createElement(Component, Object.assign({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      })) : React.createElement(Redirect, {\n        to: {\n          pathname: '/',\n          state: {\n            from: props.location\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }));\n  }\n\n}\n\n;\n\nconst mapDispatchToProps = dispatch => ({\n  onAuthenticated: user => dispatch(onAuthenticated(user)),\n  onUnAuthenticated: () => dispatch(onUnAuthenticated())\n});\n\nconst ConnectedPrivateRouteContainer = connect(null, mapDispatchToProps)(PrivateRouteContainer);\nexport default ConnectedPrivateRouteContainer;","map":{"version":3,"sources":["/Users/philippmourasrivastava/Dev/Foxdale/src/app/containers/privateRouteContainer.js"],"names":["React","Component","connect","onAuthenticated","onUnAuthenticated","Redirect","Route","Firebase","PrivateRouteContainer","constructor","props","render","component","authenticated","rest","pathname","state","from","location","mapDispatchToProps","dispatch","user","ConnectedPrivateRouteContainer"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,eAAT,EAA0BC,iBAA1B,QAAmD,iBAAnD;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,kBAAhC;AACA,OAAOC,QAAP,MAAqB,oBAArB;;AAEA,MAAMC,qBAAN,SAAoCP,SAApC,CAA8C;AAC5CQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAGD;;AAEDC,EAAAA,MAAM,GAAG;AAAA,wBACkD,KAAKD,KADvD;AAAA,UACYT,SADZ,eACCW,SADD;AAAA,UACuBC,aADvB,eACuBA,aADvB;AAAA,UACyCC,IADzC;;AAGP,WACE,oBAAC,KAAD,oBACQA,IADR;AAEI,MAAA,MAAM,EAAEJ,KAAK,IAETG,aAAa,KAAK,IAAlB,GACI,oBAAC,SAAD,oBAAeH,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ,GAGI,oBAAC,QAAD;AACI,QAAA,EAAE,EAAE;AACAK,UAAAA,QAAQ,EAAE,GADV;AAEAC,UAAAA,KAAK,EAAE;AAAEC,YAAAA,IAAI,EAAEP,KAAK,CAACQ;AAAd;AAFP,SADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF;AAkBD;;AA5B2C;;AA6B7C;;AAID,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK;AACpCjB,EAAAA,eAAe,EAAEkB,IAAI,IAAID,QAAQ,CAACjB,eAAe,CAACkB,IAAD,CAAhB,CADG;AAEpCjB,EAAAA,iBAAiB,EAAE,MAAMgB,QAAQ,CAAChB,iBAAiB,EAAlB;AAFG,CAAL,CAAnC;;AAKA,MAAMkB,8BAA8B,GAAGpB,OAAO,CAAC,IAAD,EAAOiB,kBAAP,CAAP,CAAkCX,qBAAlC,CAAvC;AAEA,eAAec,8BAAf","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { onAuthenticated, onUnAuthenticated } from '../actions/user'\nimport { Redirect, Route } from 'react-router-dom'\nimport Firebase from '../config/Firebase'\n\nclass PrivateRouteContainer extends Component {\n  constructor(props) {\n    super(props);\n\n\n  }\n\n  render() {\n    const { component: Component, authenticated, ...rest } = this.props\n\n    return(\n      <Route\n          {...rest}\n          render={props =>\n\n              authenticated === true ? (\n                  <Component {...props} />\n              ) : (\n                  <Redirect\n                      to={{\n                          pathname: '/',\n                          state: { from: props.location }\n                      }}\n                  />\n              )\n          }\n      />\n    );\n  }\n};\n\n\n\nconst mapDispatchToProps = dispatch => ({\n    onAuthenticated: user => dispatch(onAuthenticated(user)),\n    onUnAuthenticated: () => dispatch(onUnAuthenticated())\n})\n\nconst ConnectedPrivateRouteContainer = connect(null, mapDispatchToProps)(PrivateRouteContainer)\n\nexport default ConnectedPrivateRouteContainer\n"]},"metadata":{},"sourceType":"module"}