{"ast":null,"code":"var _jsxFileName = \"/Users/philippmourasrivastava/Dev/Foxdale/src/app/components/signUpForm/index.js\";\nimport React, { Component } from 'react';\nimport { Input, Form, Icon, message } from 'antd';\nimport { accountCreationKey } from '../../../../package.json';\nconst styles = {\n  modalInput: {\n    width: '60%'\n  }\n};\n\nconst SignUpForm = props => {\n  const onSubmit = props.onSubmit,\n        form = props.form;\n  const getFieldDecorator = form.getFieldDecorator;\n\n  const createAccount = e => {\n    e.preventDefault();\n    props.form.validateFields((err, values) => {\n      if (!err) {\n        if (values.creationKey == accountCreationKey) {\n          const info = {\n            email: values.email,\n            password: values.password\n          };\n          onSubmit(info);\n          props.form.resetFields();\n        } else {\n          message.error('The key you entered is incorrect!');\n        }\n      }\n    });\n  };\n\n  return React.createElement(Form, {\n    onSubmit: createAccount,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(Form.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, getFieldDecorator('email', {\n    rules: [{\n      type: 'email',\n      message: 'The input is not valid E-mail!'\n    }, {\n      required: true,\n      message: \"Please provide an email for the new account\"\n    }]\n  })(React.createElement(Input, {\n    prefix: React.createElement(Icon, {\n      type: \"mail\",\n      style: {\n        color: 'rgba(0,0,0,.25)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }),\n    placeholder: \"Email\",\n    style: styles.modalInput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }))), React.createElement(Form.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, getFieldDecorator('password', {\n    rules: [{\n      required: true,\n      message: 'Please input a password'\n    }]\n  })(React.createElement(Input, {\n    prefix: React.createElement(Icon, {\n      type: \"lock\",\n      style: {\n        color: 'rgba(0,0,0,.25)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }),\n    type: \"password\",\n    placeholder: \"Password\",\n    style: styles.modalInput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }))), React.createElement(Form.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, getFieldDecorator('creationKey', {\n    rules: [{\n      required: true,\n      message: \"Please provide a security key\"\n    }]\n  })(React.createElement(Input, {\n    prefix: React.createElement(Icon, {\n      type: \"key\",\n      style: {\n        color: 'rgba(0,0,0,.25)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }),\n    placeholder: \"Key\",\n    style: styles.modalInput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }))));\n};\n\nexport default Form.create({\n  name: 'SignUpForm'\n})(SignUpForm);","map":{"version":3,"sources":["/Users/philippmourasrivastava/Dev/Foxdale/src/app/components/signUpForm/index.js"],"names":["React","Component","Input","Form","Icon","message","accountCreationKey","styles","modalInput","width","SignUpForm","props","onSubmit","form","getFieldDecorator","createAccount","e","preventDefault","validateFields","err","values","creationKey","info","email","password","resetFields","error","rules","type","required","color","create","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Input, Form, Icon, message } from 'antd';\nimport { accountCreationKey } from '../../../../package.json'\n\nconst styles = {\n  modalInput: {\n    width: '60%'\n  }\n}\n\n\nconst SignUpForm = (props) => {\n\n  const { onSubmit, form } = props;\n  const { getFieldDecorator } = form;\n\n  const createAccount = e => {\n\n    e.preventDefault()\n\n    props.form.validateFields((err, values) => {\n      if(!err) {\n        if(values.creationKey == accountCreationKey) {\n          const info = {\n            email: values.email,\n            password: values.password\n          }\n          onSubmit(info)\n\n          props.form.resetFields()\n        }\n        else {\n          message.error('The key you entered is incorrect!')\n        }\n      }\n    })\n  }\n\n\n  return (\n      <Form onSubmit={createAccount}>\n        <Form.Item>\n          {\n            getFieldDecorator('email', {\n              rules: [\n                {\n                  type: 'email',\n                  message: 'The input is not valid E-mail!',\n                },\n                {\n                  required: true,\n                  message: \"Please provide an email for the new account\"\n                }\n              ]\n            })(\n              <Input\n                  prefix={\n                      <Icon\n                          type=\"mail\"\n                          style={{ color: 'rgba(0,0,0,.25)' }}\n                      />\n                  }\n                  placeholder=\"Email\"\n                  style={styles.modalInput}\n              />\n            )\n          }\n        </Form.Item>\n        <Form.Item>\n            {getFieldDecorator('password', {\n                rules: [\n                    {\n                        required: true,\n                        message: 'Please input a password'\n                    }\n                ]\n            })(\n                <Input\n                    prefix={\n                        <Icon\n                            type=\"lock\"\n                            style={{ color: 'rgba(0,0,0,.25)' }}\n                        />\n                    }\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    style={styles.modalInput}\n                />\n            )}\n        </Form.Item>\n        <Form.Item>\n          {\n            getFieldDecorator('creationKey', {\n              rules: [\n                {\n                  required: true,\n                  message: \"Please provide a security key\"\n                }\n              ]\n            })(\n              <Input\n                  prefix={\n                      <Icon\n                          type=\"key\"\n                          style={{ color: 'rgba(0,0,0,.25)' }}\n                      />\n                  }\n                  placeholder=\"Key\"\n                  style={styles.modalInput}\n              />\n            )\n          }\n        </Form.Item>\n      </Form>\n  )\n}\n\nexport default Form.create({ name: 'SignUpForm' })(SignUpForm)\n"]},"metadata":{},"sourceType":"module"}