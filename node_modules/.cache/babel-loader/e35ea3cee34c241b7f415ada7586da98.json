{"ast":null,"code":"import Firebase from '../config/Firebase';\nexport const UPDATE_TESTIMONIES = \"UPDATE_TESTIMONIES\";\nexport const TOGGLE_TESTIMONY_LOADING = \"TOGGLE_TESTIMONY_LOADING\";\nexport const getTestimonies = () => {\n  return dispatch => {\n    Firebase.firestore().collection('testimonies').limit(20).get().then(snap => {\n      var arr = [];\n      snap.docs.map(doc => {\n        const obj = Object.assign({\n          _id: doc.id\n        }, doc.data());\n        arr.push(obj);\n      });\n      dispatch(updateTestimonies(arr));\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n};\nexport const toggleTestimony = () => {\n  return dispatch => {\n    dispatch(toggleTestimonyLoading());\n  };\n};\nexport const insertTestimony = testimony => {\n  return (dispatch, getState) => {\n    const body = testimony.body,\n          author = testimony.author;\n    const date = new Date();\n    Firebase.firestore().collection('testimonies').add({\n      testimony: body,\n      author: author,\n      date: new Date()\n    }).then(doc => {\n      console.log('documnet successfully written');\n    }).catch(err => {\n      console.log(\"There was an error: \", err);\n    });\n  };\n};\nexport const deleteTestimony = testId => {\n  return (dispatch, getState) => {\n    Firebase.firestore().collection('testimonies').doc(testId).delete().then(() => {\n      console.log('Documnet Sucessfully Deleted');\n      const testimonies = getState().testimonies.testimonies;\n      var newTest = [];\n      testimonies.map(t => {\n        if (t._id != testId) {\n          newTest.push(t);\n        }\n      });\n      dispatch(updateTestimonies(newTest));\n    }).catch(err => {\n      console.log(\"There was an error\", err);\n    });\n  };\n};\n\nconst updateTestimonies = testimonies => ({\n  type: UPDATE_TESTIMONIES,\n  testimonies\n});\n\nconst toggleTestimonyLoading = () => ({\n  type: TOGGLE_TESTIMONY_LOADING\n});","map":{"version":3,"sources":["/Users/philippmourasrivastava/Dev/Foxdale/src/app/actions/testimonies.js"],"names":["Firebase","UPDATE_TESTIMONIES","TOGGLE_TESTIMONY_LOADING","getTestimonies","dispatch","firestore","collection","limit","get","then","snap","arr","docs","map","doc","obj","Object","assign","_id","id","data","push","updateTestimonies","catch","err","console","log","toggleTestimony","toggleTestimonyLoading","insertTestimony","testimony","getState","body","author","date","Date","add","deleteTestimony","testId","delete","testimonies","newTest","t","type"],"mappings":"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","sourcesContent":["import Firebase from '../config/Firebase'\n\nexport const UPDATE_TESTIMONIES = \"UPDATE_TESTIMONIES\";\nexport const TOGGLE_TESTIMONY_LOADING = \"TOGGLE_TESTIMONY_LOADING\";\n\nexport const getTestimonies = () => {\n\n\n  return (dispatch) => {\n\n    Firebase.firestore().collection('testimonies').limit(20).get().then((snap) => {\n      var arr = []\n\n      snap.docs.map((doc) => {\n\n\n        const obj = Object.assign({_id: doc.id}, doc.data())\n\n\n        arr.push(obj)\n      })\n      dispatch(updateTestimonies(arr))\n    }).catch((err) => {\n      console.log(err)\n    })\n\n  }\n\n}\n\nexport const toggleTestimony = () => {\n\n  return (dispatch) => {\n    dispatch(toggleTestimonyLoading())\n  }\n}\n\nexport const insertTestimony = testimony => {\n\n  return (dispatch, getState) => {\n\n    const { body, author } = testimony;\n\n    const date = new Date()\n\n    Firebase.firestore().collection('testimonies').add({\n      testimony: body,\n      author: author,\n      date: new Date()\n    }).then((doc) => {\n      console.log('documnet successfully written');\n    }).catch((err) => {\n      console.log(\"There was an error: \", err);\n    })\n\n  }\n}\n\nexport const deleteTestimony = testId => {\n\n  return (dispatch, getState) => {\n\n    Firebase.firestore().collection('testimonies').doc(testId).delete().then(() => {\n      console.log('Documnet Sucessfully Deleted');\n      const testimonies = getState().testimonies.testimonies;\n\n      var newTest = []\n\n      testimonies.map((t) => {\n        if(t._id != testId) {\n          newTest.push(t)\n        }\n      })\n\n      dispatch(updateTestimonies(newTest))\n    }).catch((err) => {\n      console.log(\"There was an error\", err)\n    })\n\n\n  }\n}\n\n\nconst updateTestimonies = testimonies => ({\n  type: UPDATE_TESTIMONIES,\n  testimonies\n})\n\nconst toggleTestimonyLoading = () => ({\n  type: TOGGLE_TESTIMONY_LOADING\n})\n"]},"metadata":{},"sourceType":"module"}