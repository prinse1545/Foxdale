{"ast":null,"code":"import Firebase from '../config/Firebase';\nexport const UPDATE_TESTIMONIES = \"UPDATE_TESTIMONIES\";\nexport const TOGGLE_TESTIMONY_LOADING = \"TOGGLE_TESTIMONY_LOADING\";\nexport const getTestimonies = () => {\n  return dispatch => {\n    Firebase.firestore().collection('testimonies').get().then(snap => {\n      var arr = [];\n      snap.docs.map(doc => {\n        const obj = Object.assign({\n          _id: doc.id\n        }, doc.data());\n        arr.push(obj);\n      });\n      dispatch(updateTestimonies(arr));\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n};\nexport const toggleTestimony = () => {\n  return dispatch => {\n    dispatch(toggleTestimonyLoading());\n  };\n};\nexport const insertTestimony = testimony => {\n  return (dispatch, getState) => {\n    const body = testimony.body,\n          author = testimony.author;\n    const date = new Date();\n    Firebase.firestore().collection('testimonies').add({\n      testimony: body,\n      author: author,\n      date: date\n    }).then(doc => {\n      console.log('documnet successfully written');\n      const addedTest = {\n        _id: doc.id,\n        testimony: body,\n        author: author,\n        date: date\n      };\n      const testimonies = getState().testimonies.testimonies;\n      var newTest = [];\n      testimonies.map(test => {\n        newTest.push(test);\n      });\n      newTest.push(addedTest);\n      dispatch(updateTestimonies(newTest));\n    }).catch(err => {\n      console.log(\"There was an error: \", err);\n    });\n  };\n};\nexport const deleteTestimony = testId => {\n  return (dispatch, getState) => {\n    Firebase.firestore().collection('testimonies').doc(testId).delete().then(() => {\n      console.log('Documnet Sucessfully Deleted');\n      const testimonies = getState().testimonies.testimonies;\n      var newTest = [];\n      testimonies.map(t => {\n        if (t._id != testId) {\n          newTest.push(t);\n        }\n      });\n      dispatch(updateTestimonies(newTest));\n    }).catch(err => {\n      console.log(\"There was an error\", err);\n    });\n  };\n};\n\nconst updateTestimonies = testimonies => ({\n  type: UPDATE_TESTIMONIES,\n  testimonies\n});\n\nconst toggleTestimonyLoading = () => ({\n  type: TOGGLE_TESTIMONY_LOADING\n});","map":{"version":3,"sources":["/Users/philippmourasrivastava/Dev/Foxdale/src/app/actions/testimonies.js"],"names":["Firebase","UPDATE_TESTIMONIES","TOGGLE_TESTIMONY_LOADING","getTestimonies","dispatch","firestore","collection","get","then","snap","arr","docs","map","doc","obj","Object","assign","_id","id","data","push","updateTestimonies","catch","err","console","log","toggleTestimony","toggleTestimonyLoading","insertTestimony","testimony","getState","body","author","date","Date","add","addedTest","testimonies","newTest","test","deleteTestimony","testId","delete","t","type"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oBAArB;AAEA,OAAO,MAAMC,kBAAkB,GAAG,oBAA3B;AACP,OAAO,MAAMC,wBAAwB,GAAG,0BAAjC;AAEP,OAAO,MAAMC,cAAc,GAAG,MAAM;AAGlC,SAAQC,QAAD,IAAc;AAEnBJ,IAAAA,QAAQ,CAACK,SAAT,GAAqBC,UAArB,CAAgC,aAAhC,EAA+CC,GAA/C,GAAqDC,IAArD,CAA2DC,IAAD,IAAU;AAClE,UAAIC,GAAG,GAAG,EAAV;AAEAD,MAAAA,IAAI,CAACE,IAAL,CAAUC,GAAV,CAAeC,GAAD,IAAS;AAGrB,cAAMC,GAAG,GAAGC,MAAM,CAACC,MAAP,CAAc;AAACC,UAAAA,GAAG,EAAEJ,GAAG,CAACK;AAAV,SAAd,EAA6BL,GAAG,CAACM,IAAJ,EAA7B,CAAZ;AAGAT,QAAAA,GAAG,CAACU,IAAJ,CAASN,GAAT;AACD,OAPD;AAQAV,MAAAA,QAAQ,CAACiB,iBAAiB,CAACX,GAAD,CAAlB,CAAR;AACD,KAZD,EAYGY,KAZH,CAYUC,GAAD,IAAS;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,KAdD;AAgBD,GAlBD;AAoBD,CAvBM;AAyBP,OAAO,MAAMG,eAAe,GAAG,MAAM;AAEnC,SAAQtB,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACuB,sBAAsB,EAAvB,CAAR;AACD,GAFD;AAGD,CALM;AAOP,OAAO,MAAMC,eAAe,GAAGC,SAAS,IAAI;AAE1C,SAAO,CAACzB,QAAD,EAAW0B,QAAX,KAAwB;AAAA,UAErBC,IAFqB,GAEJF,SAFI,CAErBE,IAFqB;AAAA,UAEfC,MAFe,GAEJH,SAFI,CAEfG,MAFe;AAI7B,UAAMC,IAAI,GAAG,IAAIC,IAAJ,EAAb;AAEAlC,IAAAA,QAAQ,CAACK,SAAT,GAAqBC,UAArB,CAAgC,aAAhC,EAA+C6B,GAA/C,CAAmD;AACjDN,MAAAA,SAAS,EAAEE,IADsC;AAEjDC,MAAAA,MAAM,EAAEA,MAFyC;AAGjDC,MAAAA,IAAI,EAAEA;AAH2C,KAAnD,EAIGzB,IAJH,CAISK,GAAD,IAAS;AACfW,MAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AAEA,YAAMW,SAAS,GAAG;AAChBnB,QAAAA,GAAG,EAAEJ,GAAG,CAACK,EADO;AAEhBW,QAAAA,SAAS,EAAEE,IAFK;AAGhBC,QAAAA,MAAM,EAAEA,MAHQ;AAIhBC,QAAAA,IAAI,EAAEA;AAJU,OAAlB;AAOA,YAAMI,WAAW,GAAGP,QAAQ,GAAGO,WAAX,CAAuBA,WAA3C;AAEA,UAAIC,OAAO,GAAG,EAAd;AAEAD,MAAAA,WAAW,CAACzB,GAAZ,CAAiB2B,IAAD,IAAU;AACxBD,QAAAA,OAAO,CAAClB,IAAR,CAAamB,IAAb;AACD,OAFD;AAIAD,MAAAA,OAAO,CAAClB,IAAR,CAAagB,SAAb;AAEAhC,MAAAA,QAAQ,CAACiB,iBAAiB,CAACiB,OAAD,CAAlB,CAAR;AACD,KAzBD,EAyBGhB,KAzBH,CAyBUC,GAAD,IAAS;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCF,GAApC;AACD,KA3BD;AA6BD,GAnCD;AAoCD,CAtCM;AAwCP,OAAO,MAAMiB,eAAe,GAAGC,MAAM,IAAI;AAEvC,SAAO,CAACrC,QAAD,EAAW0B,QAAX,KAAwB;AAE7B9B,IAAAA,QAAQ,CAACK,SAAT,GAAqBC,UAArB,CAAgC,aAAhC,EAA+CO,GAA/C,CAAmD4B,MAAnD,EAA2DC,MAA3D,GAAoElC,IAApE,CAAyE,MAAM;AAC7EgB,MAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACA,YAAMY,WAAW,GAAGP,QAAQ,GAAGO,WAAX,CAAuBA,WAA3C;AAEA,UAAIC,OAAO,GAAG,EAAd;AAEAD,MAAAA,WAAW,CAACzB,GAAZ,CAAiB+B,CAAD,IAAO;AACrB,YAAGA,CAAC,CAAC1B,GAAF,IAASwB,MAAZ,EAAoB;AAClBH,UAAAA,OAAO,CAAClB,IAAR,CAAauB,CAAb;AACD;AACF,OAJD;AAMAvC,MAAAA,QAAQ,CAACiB,iBAAiB,CAACiB,OAAD,CAAlB,CAAR;AACD,KAbD,EAaGhB,KAbH,CAaUC,GAAD,IAAS;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCF,GAAlC;AACD,KAfD;AAkBD,GApBD;AAqBD,CAvBM;;AA0BP,MAAMF,iBAAiB,GAAGgB,WAAW,KAAK;AACxCO,EAAAA,IAAI,EAAE3C,kBADkC;AAExCoC,EAAAA;AAFwC,CAAL,CAArC;;AAKA,MAAMV,sBAAsB,GAAG,OAAO;AACpCiB,EAAAA,IAAI,EAAE1C;AAD8B,CAAP,CAA/B","sourcesContent":["import Firebase from '../config/Firebase'\n\nexport const UPDATE_TESTIMONIES = \"UPDATE_TESTIMONIES\";\nexport const TOGGLE_TESTIMONY_LOADING = \"TOGGLE_TESTIMONY_LOADING\";\n\nexport const getTestimonies = () => {\n\n\n  return (dispatch) => {\n\n    Firebase.firestore().collection('testimonies').get().then((snap) => {\n      var arr = []\n\n      snap.docs.map((doc) => {\n\n\n        const obj = Object.assign({_id: doc.id}, doc.data())\n\n\n        arr.push(obj)\n      })\n      dispatch(updateTestimonies(arr))\n    }).catch((err) => {\n      console.log(err)\n    })\n\n  }\n\n}\n\nexport const toggleTestimony = () => {\n\n  return (dispatch) => {\n    dispatch(toggleTestimonyLoading())\n  }\n}\n\nexport const insertTestimony = testimony => {\n\n  return (dispatch, getState) => {\n\n    const { body, author } = testimony;\n\n    const date = new Date()\n\n    Firebase.firestore().collection('testimonies').add({\n      testimony: body,\n      author: author,\n      date: date\n    }).then((doc) => {\n      console.log('documnet successfully written');\n\n      const addedTest = {\n        _id: doc.id,\n        testimony: body,\n        author: author,\n        date: date\n      }\n\n      const testimonies = getState().testimonies.testimonies\n\n      var newTest = []\n\n      testimonies.map((test) => {\n        newTest.push(test)\n      })\n\n      newTest.push(addedTest)\n\n      dispatch(updateTestimonies(newTest))\n    }).catch((err) => {\n      console.log(\"There was an error: \", err);\n    })\n\n  }\n}\n\nexport const deleteTestimony = testId => {\n\n  return (dispatch, getState) => {\n\n    Firebase.firestore().collection('testimonies').doc(testId).delete().then(() => {\n      console.log('Documnet Sucessfully Deleted');\n      const testimonies = getState().testimonies.testimonies;\n\n      var newTest = []\n\n      testimonies.map((t) => {\n        if(t._id != testId) {\n          newTest.push(t)\n        }\n      })\n\n      dispatch(updateTestimonies(newTest))\n    }).catch((err) => {\n      console.log(\"There was an error\", err)\n    })\n\n\n  }\n}\n\n\nconst updateTestimonies = testimonies => ({\n  type: UPDATE_TESTIMONIES,\n  testimonies\n})\n\nconst toggleTestimonyLoading = () => ({\n  type: TOGGLE_TESTIMONY_LOADING\n})\n"]},"metadata":{},"sourceType":"module"}