{"ast":null,"code":"var _jsxFileName = \"/Users/philippmourasrivastava/Dev/Foxdale/src/app/screens/home/index.js\";\n// Philipp Moura Srivastava\n// 4 Juni 2019\n// Filename: home/index.js\n// Description: The home page made for foxdale blog and testimonial\n// mangement.\nimport React, { Component } from 'react';\nimport { Row, Col, List, Typography, Modal, Input, Button, Skeleton, Form } from 'antd';\nimport ListHeader from '../../components/listHeader';\nimport PanelButton from '../../components/panelButton';\nimport { connect } from 'react-redux';\nimport { getTestimonies, insertTestimony, deleteTestimony, toggleTestimony } from '../../actions/testimonies';\nimport { loadBlogs, addBlogPost, deleteBlogPost, toggleBlog } from '../../actions/blogs';\nconst styles = {\n  container: {\n    backgroundColor: '#ffae19',\n    height: 960,\n    width: '100%'\n  },\n  row: {\n    flexDirection: 'row',\n    backgroundColor: '#fff'\n  },\n  list: {\n    paddingBottom: '30%'\n  },\n  logoContainer: {\n    paddingTop: '3%',\n    marginBottom: '3%'\n  },\n  input: {\n    height: 30\n  },\n  listItem: {\n    borderColor: '#ffae19',\n    borderWidth: 1,\n    borderRadius: 10\n  },\n  title: {\n    fontFamily: 'Avenir',\n    fontSize: 28,\n    color: '#fff',\n    marginLeft: 30\n  },\n  logo: {\n    marginLeft: 50\n  },\n  content: {\n    fontFamily: 'Avenir',\n    fontSize: 22\n  },\n  author: {\n    fontFamily: 'Avenir',\n    fontSize: 16\n  }\n};\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.showTestModal = () => {\n      this.setState({\n        visible: true,\n        modalTitle: \"Add Testimony\",\n        subType: 'test',\n        placeholder: 'Enter a new testimony...'\n      });\n    };\n\n    this.showBlogModal = () => {\n      this.setState({\n        visible: true,\n        modalTitle: \"Add Blog Post\",\n        subType: 'blog',\n        placeholder: 'Enter a new blog post...'\n      });\n    };\n\n    this.handleOk = e => {\n      e.preventDefault();\n      const _this$state = this.state,\n            subType = _this$state.subType,\n            subText = _this$state.subText;\n      this.props.form.validateFields((err, values) => {\n        if (!err) {\n          console.log('Received values of form: ', values);\n\n          switch (subType) {\n            case 'test':\n              this.props.insertTestimony({\n                body: values.body,\n                author: values.author\n              });\n              break;\n\n            case 'blog':\n              this.props.addBlogPost(values.body);\n          }\n        }\n      });\n      this.setState({\n        visible: false\n      });\n    };\n\n    this.handleCancel = e => {\n      console.log(e);\n      this.setState({\n        visible: false\n      });\n    };\n\n    this.handleChange = e => {\n      console.log(e);\n    };\n\n    this.state = {\n      visible: false,\n      modalTitle: null,\n      subType: null,\n      placeholder: null,\n      subText: null //Set as loading for skeleton\n\n    };\n    this.props.toggleBlog();\n    this.props.toggleTestimony(); //Loading data\n\n    this.props.getTestimonies();\n    this.props.loadBlogs(); //Set as finished loading for skeleton\n\n    this.props.toggleBlog();\n    this.props.toggleTestimony();\n  }\n\n  onClick(id) {\n    console.log(id);\n    this.props.deleteTestimony(id);\n  }\n\n  render() {\n    const _this$props$form = this.props.form,\n          getFieldDecorator = _this$props$form.getFieldDecorator,\n          getFieldError = _this$props$form.getFieldError,\n          isFieldTouched = _this$props$form.isFieldTouched;\n    const bodyError = isFieldTouched('body') && getFieldError('userName');\n    const passwordError = isFieldTouched('password') && getFieldError('password');\n    const _this$state2 = this.state,\n          visible = _this$state2.visible,\n          modalTitle = _this$state2.modalTitle,\n          placeholder = _this$state2.placeholder,\n          subType = _this$state2.subType;\n    const _this$props = this.props,\n          blogPosts = _this$props.blogPosts,\n          testimonies = _this$props.testimonies,\n          testimonyLoading = _this$props.testimonyLoading,\n          blogLoading = _this$props.blogLoading,\n          deleteBlogPost = _this$props.deleteBlogPost,\n          deleteTestimony = _this$props.deleteTestimony;\n    console.log(blogPosts[0] != undefined && new Date(blogPosts[0].date));\n    console.log(testimonies[0] != undefined && testimonies[0]);\n    return React.createElement(\"div\", {\n      style: styles.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(Row, {\n      type: \"flex\",\n      align: \"middle\",\n      style: styles.logoContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"https://foxdale.s3.amazonaws.com/media/fox_head.png\",\n      style: styles.logo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      style: styles.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \"Foxdale Blog & Testimony Management\")), React.createElement(Row, {\n      type: \"flex\",\n      style: styles.row,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(Col, {\n      span: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(List, {\n      header: React.createElement(ListHeader, {\n        header: \"Testimonies\",\n        onClick: this.showTestModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }),\n      bordered: true,\n      dataSource: testimonies,\n      style: styles.list,\n      renderItem: item => React.createElement(List.Item, {\n        actions: [React.createElement(PanelButton, {\n          text: \"Are you sure you wish to delete this testimony?\",\n          onClick: () => this.onClick(item._id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180\n          },\n          __self: this\n        })],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(Skeleton, {\n        loading: testimonyLoading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, React.createElement(List.Item.Meta, {\n        title: React.createElement(Typography, {\n          style: styles.content,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183\n          },\n          __self: this\n        }, item.testimony),\n        description: React.createElement(Typography, {\n          style: styles.author,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 184\n          },\n          __self: this\n        }, \"\\u2015 \", item.author),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    })), React.createElement(Col, {\n      span: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(List, {\n      header: React.createElement(ListHeader, {\n        header: \"Blog Posts\",\n        onClick: this.showBlogModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }),\n      bordered: true,\n      dataSource: blogPosts,\n      style: styles.list,\n      renderItem: item => React.createElement(List.Item, {\n        actions: [React.createElement(PanelButton, {\n          text: \"Are you sure you wish to delete this blog?\",\n          onClick: deleteBlogPost(item._id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 198\n          },\n          __self: this\n        })],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, React.createElement(Skeleton, {\n        loading: blogLoading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, React.createElement(List.Item.Meta, {\n        title: React.createElement(Typography, {\n          style: styles.content,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 201\n          },\n          __self: this\n        }, item.text),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }))), React.createElement(Modal, {\n      title: modalTitle,\n      visible: visible,\n      onCancel: this.handleCancel,\n      footer: [React.createElement(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, \"Submit\")],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: this.handleOk,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, getFieldDecorator('body', {\n      rules: [{\n        required: true,\n        message: 'Please input some text'\n      }]\n    })(React.createElement(Input.TextArea, {\n      placeholder: placeholder,\n      rows: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }))), subType == 'test' && React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, getFieldDecorator('author', {\n      rules: [{\n        required: true,\n        message: 'Please enter the author\\'s name'\n      }]\n    })(React.createElement(Input, {\n      placeholder: \"Enter an author\\'s name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\n;\n\nconst mapStateToProps = state => {\n  return {\n    testimonies: state.testimonies.testimonies,\n    blogPosts: state.blogs.blogPosts,\n    testimonyLoading: state.testimonies.testimonyLoading,\n    blogLoading: state.blogs.blogLoading\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  getTestimonies: () => dispatch(getTestimonies()),\n  loadBlogs: () => dispatch(loadBlogs()),\n  insertTestimony: testimony => dispatch(insertTestimony(testimony)),\n  addBlogPost: blogPost => dispatch(addBlogPost(blogPost)),\n  deleteTestimony: testId => dispatch(deleteTestimony(testId)),\n  deleteBlogPost: blogId => dispatch(deleteBlogPost(blogId)),\n  toggleBlog: () => dispatch(toggleBlog()),\n  toggleTestimony: () => dispatch(toggleTestimony())\n});\n\nconst ConnectedHome = connect(mapStateToProps, mapDispatchToProps)(Home);\nexport default Form.create({\n  name: \"ConnectedHome\"\n})(ConnectedHome);","map":{"version":3,"sources":["/Users/philippmourasrivastava/Dev/Foxdale/src/app/screens/home/index.js"],"names":["React","Component","Row","Col","List","Typography","Modal","Input","Button","Skeleton","Form","ListHeader","PanelButton","connect","getTestimonies","insertTestimony","deleteTestimony","toggleTestimony","loadBlogs","addBlogPost","deleteBlogPost","toggleBlog","styles","container","backgroundColor","height","width","row","flexDirection","list","paddingBottom","logoContainer","paddingTop","marginBottom","input","listItem","borderColor","borderWidth","borderRadius","title","fontFamily","fontSize","color","marginLeft","logo","content","author","Home","constructor","props","showTestModal","setState","visible","modalTitle","subType","placeholder","showBlogModal","handleOk","e","preventDefault","state","subText","form","validateFields","err","values","console","log","body","handleCancel","handleChange","onClick","id","render","getFieldDecorator","getFieldError","isFieldTouched","bodyError","passwordError","blogPosts","testimonies","testimonyLoading","blogLoading","undefined","Date","date","item","_id","testimony","text","rules","required","message","mapStateToProps","blogs","mapDispatchToProps","dispatch","blogPost","testId","blogId","ConnectedHome","create","name"],"mappings":"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","sourcesContent":["// Philipp Moura Srivastava\n// 4 Juni 2019\n// Filename: home/index.js\n// Description: The home page made for foxdale blog and testimonial\n// mangement.\nimport React, { Component } from 'react'\nimport { Row, Col, List, Typography, Modal, Input, Button, Skeleton, Form } from 'antd';\nimport ListHeader from '../../components/listHeader';\nimport PanelButton from '../../components/panelButton';\nimport { connect } from 'react-redux';\n\nimport { getTestimonies, insertTestimony, deleteTestimony, toggleTestimony } from '../../actions/testimonies';\nimport { loadBlogs, addBlogPost, deleteBlogPost, toggleBlog } from '../../actions/blogs';\n\n\nconst styles = {\n  container: {\n    backgroundColor: '#ffae19',\n    height: 960,\n    width: '100%'\n  },\n  row: {\n    flexDirection: 'row',\n    backgroundColor: '#fff'\n  },\n  list: {\n    paddingBottom: '30%',\n  },\n  logoContainer: {\n    paddingTop: '3%',\n    marginBottom: '3%'\n  },\n  input: {\n    height: 30\n  },\n  listItem: {\n    borderColor: '#ffae19',\n    borderWidth: 1,\n    borderRadius: 10,\n  },\n  title: {\n    fontFamily: 'Avenir',\n    fontSize: 28,\n    color: '#fff',\n    marginLeft: 30\n  },\n  logo: {\n    marginLeft: 50\n  },\n  content: {\n    fontFamily: 'Avenir',\n    fontSize: 22\n  },\n  author: {\n    fontFamily: 'Avenir',\n    fontSize: 16\n  }\n}\n\nclass Home extends Component{\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      visible: false,\n      modalTitle: null,\n      subType: null,\n      placeholder: null,\n      subText: null\n    }\n    //Set as loading for skeleton\n    this.props.toggleBlog()\n    this.props.toggleTestimony()\n    //Loading data\n    this.props.getTestimonies()\n    this.props.loadBlogs()\n    //Set as finished loading for skeleton\n    this.props.toggleBlog()\n    this.props.toggleTestimony()\n  }\n\n\n  showTestModal = () => {\n    this.setState({\n      visible: true,\n      modalTitle: \"Add Testimony\",\n      subType: 'test',\n      placeholder: 'Enter a new testimony...'\n    });\n  };\n\n  showBlogModal = () => {\n    this.setState({\n      visible: true,\n      modalTitle: \"Add Blog Post\",\n      subType: 'blog',\n      placeholder: 'Enter a new blog post...'\n    });\n  }\n\n  handleOk = e => {\n    e.preventDefault()\n\n    const { subType, subText } = this.state;\n\n\n    this.props.form.validateFields((err, values) => {\n        if (!err) {\n            console.log('Received values of form: ', values)\n\n\n            switch(subType) {\n              case 'test':\n                this.props.insertTestimony({body: values.body, author: values.author});\n                break;\n              case 'blog':\n                this.props.addBlogPost(values.body);\n            }\n\n        }\n    })\n\n\n    this.setState({\n      visible: false,\n    });\n  };\n\n  onClick(id) {\n\n    console.log(id)\n    this.props.deleteTestimony(id)\n\n  }\n\n  handleCancel = e => {\n    console.log(e);\n    this.setState({\n      visible: false,\n    });\n  };\n\n  handleChange = e => {\n    console.log(e)\n  }\n\n  render() {\n    const {\n        getFieldDecorator,\n        getFieldError,\n        isFieldTouched\n    } = this.props.form\n\n    const bodyError =\n        isFieldTouched('body') && getFieldError('userName')\n    const passwordError =\n        isFieldTouched('password') && getFieldError('password')\n\n\n    const { visible, modalTitle, placeholder, subType } = this.state;\n    const { blogPosts, testimonies, testimonyLoading, blogLoading, deleteBlogPost, deleteTestimony } = this.props;\n    console.log(blogPosts[0] != undefined && new Date(blogPosts[0].date))\n    console.log(testimonies[0] != undefined && testimonies[0])\n    return (\n      <div style={styles.container}>\n          <Row type=\"flex\" align=\"middle\" style={styles.logoContainer}>\n            <img src='https://foxdale.s3.amazonaws.com/media/fox_head.png' style={styles.logo} />\n            <Typography style={styles.title}>\n              Foxdale Blog & Testimony Management\n            </Typography>\n          </Row>\n          <Row type=\"flex\" style={styles.row}>\n            <Col span={12}>\n              <List\n                header={<ListHeader header=\"Testimonies\" onClick={this.showTestModal}/>}\n                bordered\n                dataSource={testimonies}\n                style={styles.list}\n                renderItem={item => (\n                  <List.Item actions={[<PanelButton text=\"Are you sure you wish to delete this testimony?\" onClick={() => this.onClick(item._id)}/>]}>\n                    <Skeleton loading={testimonyLoading}>\n                      <List.Item.Meta\n                        title={<Typography style={styles.content}>{item.testimony}</Typography>}\n                        description={<Typography style={styles.author}>― {item.author}</Typography>}\n                      />\n                    </Skeleton>\n                  </List.Item>\n                )}\n              />\n            </Col>\n            <Col span={12}>\n              <List\n                header={<ListHeader header=\"Blog Posts\" onClick={this.showBlogModal}/>}\n                bordered\n                dataSource={blogPosts}\n                style={styles.list}\n                renderItem={item => (\n                  <List.Item actions={[<PanelButton text=\"Are you sure you wish to delete this blog?\" onClick={deleteBlogPost(item._id)}/>]}>\n                    <Skeleton loading={blogLoading}>\n                      <List.Item.Meta\n                        title={<Typography style={styles.content}>{item.text}</Typography>}\n                      />\n                    </Skeleton>\n                  </List.Item>\n                )}\n              />\n            </Col>\n          </Row>\n          <Modal\n            title={modalTitle}\n            visible={visible}\n            onCancel={this.handleCancel}\n            footer={[\n              <Button type=\"primary\" htmlType=\"submit\">\n                Submit\n              </Button>,\n            ]}\n          >\n            <Form onSubmit={this.handleOk}>\n              <Form.Item>\n              {getFieldDecorator('body', {\n                  rules: [\n                      {\n                          required: true,\n                          message: 'Please input some text'\n                      }\n                  ]\n              })(\n                <Input.TextArea\n                  placeholder={placeholder}\n                  rows={4}\n                />\n              )}\n              </Form.Item>\n              {\n                subType == 'test' &&\n                <Form.Item>\n                {getFieldDecorator('author', {\n                    rules: [\n                        {\n                            required: true,\n                            message: 'Please enter the author\\'s name'\n                        }\n                    ]\n                })(\n                  <Input\n                    placeholder={\"Enter an author\\'s name\"}\n                  />\n                )}\n                </Form.Item>\n              }\n            </Form>\n          </Modal>\n      </div>\n    );\n  }\n};\n\nconst mapStateToProps = state => {\n  return {\n    testimonies: state.testimonies.testimonies,\n    blogPosts: state.blogs.blogPosts,\n    testimonyLoading: state.testimonies.testimonyLoading,\n    blogLoading: state.blogs.blogLoading\n  }\n};\n\nconst mapDispatchToProps = dispatch => ({\n  getTestimonies: () => dispatch(getTestimonies()),\n  loadBlogs: () => dispatch(loadBlogs()),\n  insertTestimony: (testimony) => dispatch(insertTestimony(testimony)),\n  addBlogPost: (blogPost) => dispatch(addBlogPost(blogPost)),\n  deleteTestimony: (testId) => dispatch(deleteTestimony(testId)),\n  deleteBlogPost: (blogId) => dispatch(deleteBlogPost(blogId)),\n  toggleBlog: () => dispatch(toggleBlog()),\n  toggleTestimony: () => dispatch(toggleTestimony())\n});\n\nconst ConnectedHome = connect(mapStateToProps, mapDispatchToProps)(Home);\n\nexport default Form.create({ name: \"ConnectedHome\" })(ConnectedHome);\n"]},"metadata":{},"sourceType":"module"}